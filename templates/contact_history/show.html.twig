{% extends 'base.html.twig' %}

{% block title %}Contact Histories{% endblock %}

{% block body %}
<div class="">
  {% if app.user != null %}
  <div class="row">
    <div class="col-sm-12 col-lg-4">
      <br>
        <a href="{{ path('contacthistory_create') }}"><button type="button" class="btn btn-primary btn-block nav-link">Create Contact History</button></a>
      <br>
      {{ knp_pagination_filter(pagination, {'c.name': 'Name', 'ch.contactdatetime' : 'Contact Date Time'}) }}
      <br>
      {{ knp_pagination_render(pagination, null, {}, {
        'align': 'center',
        'size': 'large',
        'rounded': true,
      }) }}
    </div>
    <div class="col-sm-12 col-lg-8 table-responsive">
    <br>
      <table class="table table-striped table-light">
        <thead>
          <tr>
            <th>Contact History ID</th>
            <th>Client</th>
            <th>Contact Date Time</th>
            <th>Longitude</th>
            <th>Latitude</th>
          </tr>
        </thead>
        <tbody name="contacthistoryTable" id="contacthistoryTable">
          {% for contacthistory in pagination %}
          {% set id = contacthistory.id %}
          <tr>
            <td><a class="nav-link" href="{{ path('contacthistory_edit', {'id': contacthistory.id}) }}">{{ contacthistory.id}}</a></td>
            <td>{{ contacthistory.client }}</td>           
            <td>{{ contacthistory.contactdatetime|date('d-m-Y H:i:s') }}</td>
            <td id="latitude">{{ contacthistory.latitude }}</td>
            <td id="longitude">{{ contacthistory.longitude }}</td>
          </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
  </div>
  <div class="row" id="mapRow">
  {% for latitude in paginationLatitude %}
    <div style="display: none;" id="latitude{{loop.index}}">{{latitude.latitude}}</div>
  {% endfor %}
  {% for longitude in paginationLongitude %}
    <div style="display: none;" id="longitude{{loop.index}}">{{longitude.longitude}}</div>
  {% endfor %}
    <div style="display: none;" id="longitudelength">{{paginationLongitude|length}}</div>
    <div id="map" style="height: 400px; width: 100%;"></div>
  </div>
  {% endif %}
</div>
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBM7-90raqFIONt29xEcpPz7_rz4-1LvDE&callback=initMap&libraries=&v=weekly"
      async
    ></script>
    <script>
    // Initialize and add the map
function initMap() {
  var length = document.getElementById("longitudelength").innerText;
  const latitude = [];
  const longitude = [];
for (let i = 0; i < length; i++) {
  var j = i + 1;
  latitude.push(document.getElementById("latitude" + j).innerText);
  longitude.push(document.getElementById("longitude" + j).innerText);
}

  const map = new google.maps.Map(document.getElementById("map"), {
    zoom: 15,
    center: { lat: 52.205338, lng: 0.121817 },
    mapTypeId: "terrain",
  });


const contactPlanCoordinates = [
];
for (let i = 0; i < length; i++) {
  contactPlanCoordinates.push({ lat: parseFloat(latitude[i]), lng: parseFloat(longitude[i]) },);
}
  const contactPath = new google.maps.Polyline({
    path: contactPlanCoordinates,
    geodesic: true,
    strokeColor: "#FF0000",
    strokeOpacity: 1.0,
    strokeWeight: 2,
  });
if (navigator.geolocation) {
     navigator.geolocation.getCurrentPosition(function (position) {
         initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
         map.setCenter(initialLocation);
     });
 }
  contactPath.setMap(map);
}




    </script>
{% endblock %}
